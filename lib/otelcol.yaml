metadata:
    name: test-collector
    namespace: default
    annotations:
        # MUST BE SPECIFIED!
        # add certificate arn for non-grpc endpoint
        service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:<AWS_REGION>:012345678901:certificate/th15-15-@n-@ut0g3n3r@ted-numb3r # TODO: CHANGE ME TO A REAL ARN!!!
        service.beta.kubernetes.io/aws-load-balancer-name: mdai-non-grpc-endpoint
        service.beta.kubernetes.io/aws-load-balancer-type: external
        service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
        service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
spec:
    autoscaler:
        maxReplicas: 4
        minReplicas: 2
        targetCPUUtilization: 90
        targetMemoryUtilization: 90
    ingress:
        annotations:
            # MUST BE SPECIFIED!
            # add certificate arn (or multiple certificates arn, comma separated) for the grpc endpoints
            alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:<AWS_REGION>:012345678901:certificate/th15-15-@n-@ut0g3n3r@ted-numb3r # TODO: CHANGE ME TO A REAL ARN!!!
            alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS": 443}]'
            alb.ingress.kubernetes.io/load-balancer-name: mdai-grpc-endpoint
            alb.ingress.kubernetes.io/backend-protocol-version: GRPC
            alb.ingress.kubernetes.io/scheme: internet-facing
            alb.ingress.kubernetes.io/target-type: ip
            kubernetes.io/ingress.class: alb
        # this section is required if collector has grpc endpoints (receivers).
        # for each enabled grpc receiver receivername -> hostname mapping should be provided
        # these hostnames must be CNAMEs for corresponding ALB public address and will be used
        # for connectivity to the corresponding collector receiver
        collectorEndpoints:
            otlp: otlp.grpc.endpoint.collector.your-domain.io
            jaeger: jaeger.grpc.endpoint.collector.your-domain.io
        ingressClassName: alb
        ruleType: path
        type: aws
    # 2 replicas recommnded
    replicas: 2
    # mandatory only when  autoscaler is enabled
    # otherwise optional. can be used to limit resources consumtion
    resources:
        limits:
            cpu: 500m
            memory: 500Mi
        requests:
            cpu: 250m
            memory: 250Mi
    upgradeStrategy: automatic
    mode: deployment
    config: |
        receivers:
          otlp:
            protocols:
              http:
                endpoint: 0.0.0.0:4318
              grpc:
          jaeger:
            protocols:
              grpc:
          hostmetrics:
            collection_interval: 23s
            scrapers:
              load:
              filesystem:
              memory:
              network:
              paging:
              processes:
              process:
        processors:
          memory_limiter:
            check_interval: 23s
            limit_percentage: 75
            spike_limit_percentage: 15
          batch:
            send_batch_size: 10000
            timeout: 13s
        exporters:
          debug:
        service:
          pipelines:
            traces:
              receivers: [jaeger, otlp]
              processors: [memory_limiter, batch]
              exporters: [debug]
            metrics:
              receivers: [hostmetrics, otlp]
              processors: [batch]
              exporters: [debug]
            logs:
              receivers: [otlp]
              processors: [batch]
              exporters: [debug]
apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
